<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:local="clr-namespace:ConfigApp"
        xmlns:ui="http://schemas.modernwpf.com/2019"
        ui:WindowHelper.UseModernWindowStyle="True"
        x:Class="ConfigApp.MainWindow"
        mc:Ignorable="d"
        Title="ChaosModV Configuration"
        x:Name="mainWindow">
    <Window.DataContext>
        <local:MainWindowVM x:Name="ViewModel"/>
    </Window.DataContext>
    <Window.Resources>
        <local:BoolToVisibilityConverter x:Key="boolToVisibility"/>
        <local:RowSplitConverter x:Key="rcSplit"/>
    </Window.Resources>
    <ui:NavigationView IsBackButtonVisible="Collapsed"
                       IsSettingsVisible="False"
                       PaneDisplayMode="Top">
        <ui:NavigationView.MenuItems>
            <ui:NavigationViewItem Content="Effects" 
                                   x:Name="nav_effect_selection">
                <ui:NavigationViewItem.Icon>
                    <ui:FontIcon Glyph="&#xE734;"/>
                </ui:NavigationViewItem.Icon>
            </ui:NavigationViewItem>
            <ui:NavigationViewItem Content="Meta" 
                                   x:Name="nav_meta_selection">
                <ui:NavigationViewItem.Icon>
                    <ui:FontIcon Glyph="&#xE121;"/>
                </ui:NavigationViewItem.Icon>
            </ui:NavigationViewItem>
            <ui:NavigationViewItem Content="Misc" 
                                   x:Name="nav_misc_selection">
                <ui:NavigationViewItem.Icon>
                    <ui:FontIcon Glyph="&#xE10C;"/>
                </ui:NavigationViewItem.Icon>
            </ui:NavigationViewItem>
            <ui:NavigationViewItem Content="Twitch" 
                                   x:Name="nav_twitch_selection">
                <ui:NavigationViewItem.Icon>
                    <ui:FontIcon Glyph="&#xE7C8;"/>
                </ui:NavigationViewItem.Icon>
            </ui:NavigationViewItem>
            <ui:NavigationViewItem Content="More" 
                                   x:Name="nav_more_selection">
                <ui:NavigationViewItem.Icon>
                    <ui:FontIcon Glyph="&#xEA1F;"/>
                </ui:NavigationViewItem.Icon>
            </ui:NavigationViewItem>
        </ui:NavigationView.MenuItems>

        <ui:NavigationView.FooterMenuItems>
            <ui:NavigationViewItem Content="{Binding ModStatus}"
                                   IsHitTestVisible="{Binding AllowToOpenModPage}"
                                   SelectsOnInvoked="False"
                                   MouseDown="contribute_modpage_click"
                                   Icon="{Binding ModStatusIcon}"/>
            <ui:NavigationViewItemSeparator/>
            <ui:NavigationViewItem Content="Reset"
                                   SelectsOnInvoked="False"
                                   MouseDown="user_reset_Click"
                                   ToolTip="Reset configs"
                                   Icon="Refresh"/>
            <ui:NavigationViewItem Content="Save"
                                   SelectsOnInvoked="False"
                                   MouseDown="user_save_Click"
                                   ToolTip="Save configs"
                                   Icon="Save"/>
        </ui:NavigationView.FooterMenuItems>
        <Grid Margin="12">
            <Grid Visibility="{Binding IsSelected, ElementName=nav_effect_selection, Converter={StaticResource boolToVisibility}}">
                <TreeView x:Name="effects_user_effects_tree_view" Background="{x:Null}" BorderBrush="White" VerticalAlignment="Stretch">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:TreeMenuItem}" ItemsSource="{Binding Children}">
                            <StackPanel Orientation="Horizontal" Height="20">
                                <CheckBox Focusable="False" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                <TextBlock Text="{Binding Text}" Margin="5,0" VerticalAlignment="Center" />
                                <Button Content="..." Visibility="{Binding IsConfigVisible}" IsEnabled="{Binding IsConfigEnabled}" Width="18" Height="18" Margin="8,0" VerticalAlignment="Center" Click="effect_user_config_Click" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Grid>

            <Grid Visibility="{Binding IsSelected, ElementName=nav_meta_selection, Converter={StaticResource boolToVisibility}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="80" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid Grid.Row="0">
                    <Label Content="Meta effects modify various aspects of mod itself on a regular basis to add more variety.&#xA;They are not a part of the normal effects pool; instead, they are automatically dispatched by the mod on a fixed interval (configurable below)."
                                   Grid.Row="0"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="500" />
                        <ColumnDefinition Width="300" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="330" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                            <RowDefinition Height="40" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Label Content="How often should a new meta start (in seconds)?" Grid.Row="0" Grid.Column="0"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox x:Name="meta_effects_spawn_dur" Height="20" Width="60" Grid.Row="0" Grid.Column="2"
                                         HorizontalAlignment="Left" VerticalAlignment="Center"
                                         MaxLength="6" PreviewTextInput="OnlyNumbersPreviewTextInput"
                                         CommandManager.PreviewExecuted="NoCopyPastePreviewExecuted" ContextMenu="{x:Null}"
                                         Keyboard.PreviewKeyDown="NoSpacePreviewKeyDown" />
                        <Label Content="How long should meta effects last (in seconds)?" Grid.Row="1" Grid.Column="0"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox x:Name="meta_effects_timed_dur" Height="20" Width="60" Grid.Row="1" Grid.Column="2"
                                         HorizontalAlignment="Left" VerticalAlignment="Center"
                                         MaxLength="6" PreviewTextInput="OnlyNumbersPreviewTextInput"
                                         CommandManager.PreviewExecuted="NoCopyPastePreviewExecuted" ContextMenu="{x:Null}"
                                         Keyboard.PreviewKeyDown="NoSpacePreviewKeyDown" />
                        <Label Content="How long should short timed meta effects last (in seconds)?" Grid.Row="2" Grid.Column="0"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <TextBox x:Name="meta_effects_short_timed_dur" Height="20" Width="60" Grid.Row="2" Grid.Column="2"
                                         HorizontalAlignment="Left" VerticalAlignment="Center"
                                         MaxLength="6" PreviewTextInput="OnlyNumbersPreviewTextInput"
                                         CommandManager.PreviewExecuted="NoCopyPastePreviewExecuted" ContextMenu="{x:Null}"
                                         Keyboard.PreviewKeyDown="NoSpacePreviewKeyDown" />
                    </Grid>

                    <Grid Grid.Column="1">
                        <TreeView x:Name="meta_effects_tree_view" BorderBrush="White" Background="{x:Null}">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsExpanded" Value="True" />
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.Resources>
                                <HierarchicalDataTemplate DataType="{x:Type local:TreeMenuItem}" ItemsSource="{Binding Children}">
                                    <StackPanel Orientation="Horizontal" Height="20">
                                        <CheckBox Focusable="False" IsChecked="{Binding IsChecked}" VerticalAlignment="Center" />
                                        <TextBlock Text="{Binding Text}" Margin="5,0" VerticalAlignment="Center" />
                                        <Button Content="..." Visibility="{Binding IsConfigVisible}" IsEnabled="{Binding IsConfigEnabled}" Width="18" Height="18" Margin="8,0" VerticalAlignment="Center" Click="effect_user_config_Click" />
                                    </StackPanel>
                                </HierarchicalDataTemplate>
                            </TreeView.Resources>
                        </TreeView>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Visibility="{Binding IsSelected, ElementName=nav_misc_selection, Converter={StaticResource boolToVisibility}}">
                <ScrollViewer Padding="18" SizeChanged="RowListingUpdate">
                    <ScrollViewer.Resources>
                        <Style TargetType="ui:NumberBox">
                            <Setter Property="Margin" Value="0,0,24,0"/>
                        </Style>
                    </ScrollViewer.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="{Binding SecondColumnSize}"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>

                        <ui:NumberBox ui:ControlHelper.Header="How often should a new effect start (in seconds)?"
                                      x:Name="misc_user_effects_spawn_dur"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='0,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='0,c'}"/>

                        <ui:NumberBox ui:ControlHelper.Header="How long should timed effects last (in seconds)?"
                                      x:Name="misc_user_effects_timed_dur"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='1,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='1,c'}"/>

                        <ui:NumberBox ui:ControlHelper.Header="How long should short timed effects last (in seconds)?"
                                      x:Name="misc_user_effects_timed_short_dur"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='2,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='2,c'}"/>

                        <ui:NumberBox ui:ControlHelper.Header="Random Seed (Leave empty for random seed every time)"
                                      x:Name="misc_user_effects_random_seed"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='3,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='3,c'}"/>

                        <ui:NumberBox x:Name="misc_user_effects_max_running_effects"
                                      Maximum="99" ui:ControlHelper.Header="Max amount of simultaneously running effects"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='4,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='4,c'}"/>

                        <StackPanel Orientation="Vertical"
                                    Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='5,r'}"
                                    Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='5,c'}">
                            <Label Content="Timer Bar Color"/>
                            <xctk:ColorPicker Name="misc_user_effects_timer_color"
                                              Width="60" Height="25" HorizontalAlignment="Left"
                                              SelectedColor="#4040FF" ShowStandardColors="False" UsingAlphaChannel="False" />
                        </StackPanel>

                        <StackPanel Orientation="Vertical"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='6,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='6,c'}">
                            <Label Content="Effect Text Color"/>
                            <xctk:ColorPicker x:Name="misc_user_effects_text_color"
                                              Width="60" Height="25" HorizontalAlignment="Left"
                                              SelectedColor="#FFFFFF" ShowStandardColors="False" UsingAlphaChannel="False"/>
                        </StackPanel>

                        <StackPanel Orientation="Vertical"
                                    Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='7,r'}"
                                    Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='7,c'}">
                            <Label Content="Effect Timer Bar Color"/>
                            <xctk:ColorPicker x:Name="misc_user_effects_effect_timer_color"
                                              Width="60" Height="25" HorizontalAlignment="Left"
                                              SelectedColor="#B4B4B4" ShowStandardColors="False" UsingAlphaChannel="False" />
                        </StackPanel>

                        <ui:ToggleSwitch x:Name="misc_user_effects_disable_startup"
                                         ui:ControlHelper.Header="Disable mod on startup by default"
                                         OnContent="Disable mod on startup"
                                         OffContent="Enable mod on startup"
                                         Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='8,r'}"
                                         Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='8,c'}"/>

                        <ui:ToggleSwitch x:Name="misc_user_effects_drawtimer_disable"
                                         ui:ControlHelper.Header="Don't draw timer bar"
                                         OffContent="Timer bar visible"
                                         OnContent="Timer bar disabled"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='9,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='9,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_drawtext_disable"
                                         ui:ControlHelper.Header="Don't draw effect text"
                                         OffContent="Effect text visible"
                                         OnContent="Effect text disabled"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='10,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='10,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_clear_enable"
                                         ui:ControlHelper.Header="Enable clear active effects shortcut (CTRL + -)"
                                         OffContent="Shortcut disabled"
                                         OnContent="Shortcut enabled"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='11,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='11,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_toggle_mod_shortcut"
                                         ui:ControlHelper.Header="Enable toggle mod shortcut (CTRL + L)"
                                         OffContent="Shortcut disabled"
                                         OnContent="Shortcut enabled"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='12,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='12,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_menu_enable"
                                         ui:ControlHelper.Header="Enable effects menu (allows you to choose effects manually, CTRL + ,)"
                                         OffContent="Shortcut disabled"
                                         OnContent="Shortcut enabled"
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='13,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='13,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_timer_pause_shortcut_enable"
                                         ui:ControlHelper.Header="Enable pause timer shortcut (CTRL + .)"
                                         OffContent="Shortcut disabled"
                                         OnContent="Shortcut enabled"
                                         Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='14,r'}"
                                         Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='14,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_anti_softlock_shortcut"
                                         ui:ControlHelper.Header="Enable black screen softlock prevention shortcut (CTRL + SHIFT + K)"
                                         OffContent="Shortcut disabled"
                                         OnContent="Shortcut enabled"
                                         Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='15,r'}"
                                         Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='15,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_enable_group_weighting"
                                         ui:ControlHelper.Header="Enable effect group weighting (Recommended)"
                                         OffContent="Effect group weighting enabled"
                                         OnContent="Effect grounp weighting disabled" 
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='16,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='16,c'}"/>
                        
                        <ui:ToggleSwitch x:Name="misc_user_effects_enable_failsafe"
                                         ui:ControlHelper.Header="Allow prevention of repetitive mission fails (Failsafe)"
                                         OffContent="Mission failsafe disallowed"
                                         OnContent="Mission failsafe allowed" 
                                      Grid.Row="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='17,r'}"
                                      Grid.Column="{Binding ListingTwoRow, Converter={StaticResource rcSplit}, ConverterParameter='17,c'}"/>
                    </Grid>
                </ScrollViewer>
            </Grid>

            <Grid Visibility="{Binding IsSelected, ElementName=nav_twitch_selection, Converter={StaticResource boolToVisibility}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="120" />
                    <RowDefinition Height="180" />
                    <RowDefinition Height="30" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Label Content="This feature allows Twitch chat to vote for an effect from a collection of random ones each time the timer runs out by making use of Twitch's chat feature.&#xA;There are specific options you can / must configure below.&#xA;Consult the twitch__readme.txt file included with the mod (inside the README folder) for more information."
                                   Grid.Row="0"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <CheckBox x:Name="twitch_user_agreed" Content="Enable Twitch Voting" Grid.Row="1"
                                      HorizontalAlignment="Center" VerticalAlignment="Center"
                                      Click="twitch_user_agreed_Clicked" />
                </Grid>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="340" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition Width="400" />
                        <ColumnDefinition Width="10" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="40" />
                        <RowDefinition Height="45" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Label x:Name="twitch_user_channel_name_label" Content="Channel Name" Grid.Row="0" Grid.Column="0"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox x:Name="twitch_user_channel_name" Width="120" Height="20" Grid.Row="0" Grid.Column="2"
                                     HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Label x:Name="twitch_user_user_name_label" Content="Username" Grid.Row="1" Grid.Column="0"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox x:Name="twitch_user_user_name" Width="120" Height="20" Grid.Row="1" Grid.Column="2"
                                     HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Label x:Name="twitch_user_channel_oauth_label" Content="OAuth Token" Grid.Row="2" Grid.Column="0"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <PasswordBox x:Name="twitch_user_channel_oauth" Width="120" Height="20" Grid.Row="2" Grid.Column="2"
                                         HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Label x:Name="twitch_user_effects_secs_before_chat_voting_label" Content="Only enable chat voting X seconds before new effect triggers&#xA;(Keep at 0 to allow chat to immediately vote, value can't be 1)"
                                   Grid.Row="3" Grid.Column="0"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox x:Name="twitch_user_effects_secs_before_chat_voting" Width="60" Height="20" Grid.Row="3" Grid.Column="2"
                                     HorizontalAlignment="Left" VerticalAlignment="Center"
                                     MaxLength="6" PreviewTextInput="OnlyNumbersPreviewTextInput"
                                     CommandManager.PreviewExecuted="NoCopyPastePreviewExecuted" ContextMenu="{x:Null}"
                                     Keyboard.PreviewKeyDown="NoSpacePreviewKeyDown" />
                    <Label x:Name="twitch_user_overlay_mode_label" Content="Voting Overlay Mode" Grid.Row="0" Grid.Column="2"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <ComboBox x:Name="twitch_user_overlay_mode" Width="120" Height="25" Grid.Row="0" Grid.Column="4"
                                      HorizontalAlignment="Left" VerticalAlignment="Center" />
                    <Label x:Name="twitch_user_random_voteable_enable_label" Content="Enable &quot;Random Effect&quot; voteable option" Grid.Row="1" Grid.Column="2"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <CheckBox x:Name="twitch_user_random_voteable_enable" Width="60" Height="20" Grid.Row="1" Grid.Column="4"
                                      HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" />
                    <Label x:Name="twitch_permitted_usernames_label" Content="Permitted Twitch usernames (separated by , )"
                                Grid.Row="3" Grid.Column="2"
                                HorizontalAlignment="Right" VerticalAlignment="Center" />
                    <TextBox x:Name="twitch_permitted_usernames" Width="200" Height="20" Grid.Row="3" Grid.Column="4"
                                HorizontalAlignment="Left" VerticalAlignment="Center"
                                CommandManager.PreviewExecuted="NoCopyPastePreviewExecuted" ContextMenu="{x:Null}"
                                Keyboard.PreviewKeyDown="NoSpacePreviewKeyDown" />
                </Grid>

                <Grid Grid.Row="2">
                    <Label Content="---------- Proportional Voting Mode ----------"
                                   HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>

                <Grid Grid.Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label x:Name="twitch_user_chance_system_enable_label" Content="Enable proportional voting mode" Grid.Column="0"
                                   HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <CheckBox x:Name="twitch_user_chance_system_enable" Width="60" Height="20" Grid.Column="2"
                                      HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" />
                    </Grid>

                    <Grid Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Label x:Name="twitch_user_chance_system_retain_chance_enable_label" Content="Effects without votes should never lose their initial chance" Grid.Column="0"
                                       HorizontalAlignment="Right" VerticalAlignment="Center" />
                        <CheckBox x:Name="twitch_user_chance_system_retain_chance_enable" Width="60" Height="20" Grid.Column="2"
                                          HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" />
                    </Grid>
                </Grid>
            </Grid>

            <Grid Visibility="{Binding IsSelected, ElementName=nav_more_selection, Converter={StaticResource boolToVisibility}}">
                <Grid.Resources>
                    <Style TargetType="Rectangle" x:Key="decoratedBackground">
                        <Setter Property="Fill" Value="{DynamicResource CommandBarBackground}"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch"/>
                        <Setter Property="Margin" Value="4"/>
                        <Setter Property="Height" Value="64"/>
                    </Style>
                    <Style TargetType="Label" BasedOn="{StaticResource DefaultLabelStyle}">
                        <Setter Property="Margin" Value="18"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
                        <Setter Property="Margin" Value="18"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Rectangle Style="{StaticResource decoratedBackground}"/>
                <Label Content="Visit the mod page for more information"/>
                <Button Content="GTA5-Mods" Click="contribute_modpage_click" />
                
                <Rectangle Style="{StaticResource decoratedBackground}" Grid.Row="1"/>
                <Label Content="Enjoying the mod? Buy me a coffee! :)" Grid.Row="1"
                       Margin="18" VerticalAlignment="Center" />
                <Button Content="PayPal" Grid.Row="1" Margin="18"
                        HorizontalAlignment="Right" VerticalAlignment="Center"
                        Click="contribute_donate_click" />

                <Rectangle Style="{StaticResource decoratedBackground}" Grid.Row="2"/>
                <Label Content="Want to contribute to the mod? It's open source!" Grid.Row="2"/>
                <Button Content="GitHub" Grid.Row="2" Click="contribute_github_click" />

                <Rectangle Style="{StaticResource decoratedBackground}" Grid.Row="3"/>
                <Label Content="Join our Discord for announcements, support and more!" Grid.Row="3"/>
                <Button Content="Discord" Grid.Row="3" Click="contribute_discord_click"/>
            </Grid>
        </Grid>
    </ui:NavigationView>
</Window>
